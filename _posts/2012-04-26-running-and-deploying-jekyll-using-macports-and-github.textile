---
layout: post
title: "Running and deploying Jekyll using MacPorts and GitHub"
---

Earlier I wrote about hosting a "Jekyll generated website":http://mijndertstuij.nl/2012-04/hosting-your-jekyll-website-on-github-pages.html on GitHub Pages. A lot of requests came in for a longer blogpost explaining how Jekyll works and how to get everything up and running.

h3. Jekyll folder structure

The folder structure of a Jekyll website is pretty straight forward.

{% highlight bash %}
- _layouts (the template directory)
-- default.html (the default website template)
-- page.html (the single page template)
-- post.html (the single post template)
- _posts (all formatted posts)
- index.html (the homepage)
- screen.css (your css file)
- _config.yml (the jekyll configuration file)
{% endhighlight %}

You can browse "my code over at GitHub":https://github.com/mijndert/mijndertstuij.nl/tree/gh-pages for some more explanation. Fork it and do whatever you want with it.

h3. Getting started with Jekyll using MacPorts

how to install jekyll

h3. Running the Jekyll server

options for using the jekyll command

h3. Deploying to GitHub Pages

1. Install GitHub for Mac (or whatever Git client you prefer)
2. Create a branch called gh-pages
3. Create a file called CNAME with the URL of your website

{% highlight bash %}
touch CNAME
echo "yourhostname.tld" > CNAME
{% endhighlight %}

4. Change the DNS settings for your A and/or CNAME records depending on the URL you want to use

{% highlight bash %}
yourhostname.tld A 204.232.175.78
{% endhighlight %}

5. Commit and sync your code to GitHub, building your website will only take a couple of minutes

h3. Bonus: deploying to your own server using SCP

Here's a quick bash script to rsync the entire output directory of Jekyll to a *nix server.

In your Jekyll config you have set a destination folder for Jekyll to output it's generated files. You need this path in the script.

{% highlight bash %}
destination: /Users/yourname/Sites/yourhostname-tld
{% endhighlight %}

{% highlight bash %}
# first we need to do some cleaning up
rm -Rf ~/Sites/yourhostname-tld

# run jekyll again for the latest version to go to your output directory
cd ~/Sites/yourhostname-tld; jekyll

# rsync everything to the server
rsync -avz --delete ~/Sites/yourhostname-tld/ user@host:/var/www/yourhostname-tld
{% endhighlight %}